<%= form_for(@cohort, html: { class: 'directUpload', data: { 'form-data' => (@s3_direct_post.fields), 'url' => @s3_direct_post.url, 'host' => URI.parse(@s3_direct_post.url).host } }) do |f| %>
  <%= render 'shared/error_messages', object: f.object %>
  <div class="well">
    <div class="form-group">
      <%= f.label :name, "Tournament Name" %>
      <div class="small">
        Your event is going to rock. Give it a name that shows how good it's going to be.
      </div>
      <%= f.text_field :name, class: 'form-control' %>
    </div>

    <div class="form-group">
      <%= f.label :body, "Tournament Description" %>
      <div class="small">
        Tell your community about your event. What makes it special? What makes it unique?
      </div>
      <%= f.text_area :body, class: 'form-control' %>
    </div>

    <div class="form-group">
      <%= f.label :descriptive_date %>
      <div class="small">
        When is your event? When does it start and when does it end?
      </div>
      <%= f.text_field :descriptive_date, class: 'form-control' %>
    </div>

    <div class="form-group">
      <%= f.label :start_at, "Registration opens" %>
      <div class="small">
        Players will be able to register for your event on midnight on this date.
      </div>
      <%= f.text_field :start_at, data:{ provide:'datepicker' }, class: 'form-control' %>
    </div>

    <div class="form-group">
      <%= f.label :end_at, "Registration closes" %>
      <div class="small">
        Registration will close at 11:59PM on this date.
      </div>
      <%= f.text_field :end_at, data:{ provide:'datepicker' }, class: 'form-control' %>
    </div>

    <div class="well">
      <h3 class="p-0 mt-0">Event Address</h3>
      <div class="small pb-2">
        We prioritize event searches based on how close a player is to your event. Fill this out to help us get players connected to your event!
      </div>
      <div class="form-group">
        <%= f.label :street %>
        <%= f.text_field :street, class: 'form-control' %>
      </div>

      <div class="form-group">
        <%= f.label :city %>
        <%= f.text_field :city, class: 'form-control' %>
      </div>

      <div class="form-group">
        <%= f.label :state %>
        <%= f.text_field :state, class: 'form-control' %>
      </div>

      <div class="form-group">
        <%= f.label :country %>
        <%= f.text_field :country, class: 'form-control' %>
      </div>
    </div>

    <div class="well">
      <h3 class="p-0 mt-0">Paypal Details</h3>
      <div class="small pb-2">
        Fill this out so players can register and pay for your event online. Avoid taking cash at the door! Not sure how this works? Get help here: <a href="https://developer.paypal.com/docs/integration/admin/manage-apps/#create-sandbox-and-live-apps" target="_blank">https://developer.paypal.com</a>
      </div>
      <div class="form-group">
        <%= f.label :paypal_client_id %>
        <%= f.text_field :paypal_client_id, class: 'form-control' %>
      </div>

      <div class="form-group">
        <%= f.label :paypal_client_secret %>
        <%= f.text_field :paypal_client_secret, class: 'form-control' %>
      </div>
    </div>

    <div class="form-group">
      <%= f.label :attachment_uploader, "Players pack" %>
      <div class="small pb-2">
        Upload a PDF version of your players pack so players can get all the details when registering for your event.
      </div>
      <% unless f.object.attachment_url.blank? %>
        <br>
        <a href="<%=f.object.attachment_url %>" download>View Current Attached Players Pack</a>
        <br>
        -- OR --
      <% end %>
      <%= f.file_field :attachment_uploader, class: 'form-control' %>
      <%= f.hidden_field :attachment_url, class: 'url-holder' %>
    </div>
  </div>

  <div class="row">
    <div class="col-md-12">
      <h3>Systems</h3>
      <div class="small pb-2">
        Add at least one system to your event (hopefully it's a 40k event, but we won't judge you if it isn't)
      </div>
      <div id="systems">
        <%= f.fields_for :systems do |system| %>
          <%= render 'system_fields', :f => system %>
        <% end %>
        <div class="links">
          <%= link_to_add_association 'Add System', f, :systems, class: 'btn btn-primary btn-block' %>
        </div>
      </div>
      <hr />
    </div>
  </div>

  <div class="row">
    <div class="col-md-12">
      <div class="btn-group-vertical btn-block">
        <%= f.submit yield(:button_text), class: 'btn btn-primary' %>
        <%= f.submit "Save and activate Tournament", class: "btn btn-primary", name: 'activate_cohort' %>
      </div>
    </div>
  </div>
<% end %>

<script>
    $(function () {
        initializeUploader($('.directUpload'));
    });

    function initializeUploader(item) {
        item.find("input:file").each(function (i, elem) {
            const fileInput = $(elem);
            const form = $(fileInput.parents('form:first'));
            const submitButton = form.find('input[type="submit"]');
            const progressBar = $("<div class='bar'></div>");
            const barContainer = $("<div class='progress'></div>").append(progressBar);
            fileInput.after(barContainer);
            fileInput.fileupload({
                fileInput: fileInput,
                url: form.data('url'),
                type: 'POST',
                autoUpload: true,
                formData: form.data('form-data'),
                paramName: 'file', // S3 does not like nested name fields i.e. name="user[avatar_url]"
                dataType: 'XML',  // S3 returns XML if success_action_status is set to 201
                replaceFileInput: false,
                progressall: function (e, data) {
                    var progress = parseInt(data.loaded / data.total * 100, 10);
                    progressBar.css('width', progress + '%')
                },
                start: function (e) {
                    submitButton.prop('disabled', true);
                    progressBar.css('background', 'green').css('display', 'block').css('width', '0%').text("Loading...");
                },
                done: function (e, data) {
                    submitButton.prop('disabled', false);
                    progressBar.text("Uploading done");
                    // extract key and generate URL from response
                    var key = $(data.jqXHR.responseXML).find("Key").text();
                    var url = 'https://' + form.data('host') + '/' + key;
                    // create hidden field
                    $(elem).parent().find('.url-holder').val(url);
                },
                fail: function (e, data) {
                    submitButton.prop('disabled', false);
                    progressBar.css("background", "red").text("Failed");
                }
            });
        });
    }
</script>
