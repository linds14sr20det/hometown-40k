<% if current_user&.is_cohort_to?(@cohort) %>
  <div class="dropdown btn-group-vertical btn-block">
    <button class="btn btn-primary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
      <span class="glyphicon glyphicon-cog" aria-hidden="true"></span> Tournament Organizer Settings
    </button>
    <ul class="dropdown-menu" aria-labelledby="dropdownMenu1">
      <li><a href="<%= edit_cohort_path(@cohort) %>">Edit this event page</a></li>
      <li role="separator" class="divider"></li>
      <li><a href="<%= tickets_path(cohort_id: @cohort.id) %>">Manage individual systems</a></li>
    </ul>
  </div>
<% end %>

<%= link_to tickets_path(cohort_id: @cohort.id), class: "banner banner-show" do %>
  <div class="banner-card tickets">
    <p class="banner-date"><%= @cohort.name %></p>
    <p class="banner-date"><%= @cohort.descriptive_date %></p>
    <p class="banner-cta-text"><%= @cohort.registered_user?(current_user) ? "View Events" : "Register" %></p>
  </div>
<% end %>
<div class="well">
  <h4>About <%= @cohort.name %>:</h4>
  <p><%= sanitize(@cohort.body) %></p>
</div>

<% if @paid_registrants.present? %>
  <h3 class="mt-0">You're registered in the following systems:</h3>
  <% @paid_registrants.in_groups_of(3) do |registrant_group| %>
    <div class="row">
      <% registrant_group.each do |registrant| %>
        <%= render :partial => 'registrant_stub_banner', :locals => {:registrant => registrant} unless registrant.nil? %>
      <% end %>
    </div>
  <% end %>
<% end %>

<div class="btn-group-vertical btn-block">
  <% if @cohort.attachment_url.blank? %>
    <div class="btn btn-primary disabled">Player pack unavailable</div>
  <% else %>
    <%= link_to "Download player pack", @cohort.attachment_url, class: "btn btn-primary" %>
  <% end %>
</div>
<div id="map"></div>

<script>
  // Initialize and add the map
  function initMap() {
    var location = {lat: <%= @cohort.latitude %>, lng: <%= @cohort.longitude %>};
    var map = new google.maps.Map(
      document.getElementById('map'), {zoom: 13, center: location});
    var marker = new google.maps.Marker({position: location, map: map});
  }
</script>
<!--Load the API from the specified URL
* The async attribute allows the browser to render the page while the API loads
* The key parameter will contain your own API key (which is not needed for this tutorial)
* The callback parameter executes the initMap() function
-->
<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=<%= ENV["MAPS_KEY"] %>&callback=initMap">
</script>
