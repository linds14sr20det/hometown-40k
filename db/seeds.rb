# Create some users. These shouldn't change after initial deploy

if User.count == 0
  admin = User.new(
    email: "stephen.r.lind@gmail.com",
    name: "Stephen Lind",
    password: 'password',
    password_confirmation: 'password',
    )
  admin.skip_confirmation!
  admin.save!
end

if Rails.env == "development"
  # Seed Hometown and add registrants
  event = Cohort.new(
    name: "Hometown 40K",
    body: "Edmonton's best 40K event",
    street: "14716 82 Avenue NW",
    city: "Edmonton",
    state: "Alberta",
    country: "Canada",
    latitude: 37.751425,
    longitude: -122.419443,
    start_at: Time.zone.now + 30.days,
    end_at: Time.zone.now + 32.days,
    active: true,
    user: User.first
  )

  game = System.new(
    title: 'Test Game',
    description: 'this is a test game',
    max_players: 41,
    cost: 30,
    cohort: event,
    start_date: Time.zone.now + 30.days,
    end_date: Time.zone.now + 32.days,
    registration_open: Time.zone.now,
    registration_close: Time.zone.now + 28.days,
    round_individuals: 4
  )

  event.systems << game
  event.save

  40.times do |n|
    name = Faker::Name.name
    email = "example-#{n+1}@railstutorial.org"
    user = User.create!(
      email: email,
      name: name,
      password: 'password',
      password_confirmation: 'password'
    )
    Registrant.create!(
      user: user,
      paid: true,
      system: game
    )
  end

  # Add a bunch of fake events
  100.times do |n|
    address = Faker::Address
    a = Cohort.new(
      name: Faker::Name.name,
      body: "Autogenerated",
      street: address.street_name,
      city: address.city,
      state: address.state,
      country: address.country,
      longitude: address.longitude,
      latitude: address.latitude,
      start_at: Time.zone.now + 30.days,
      end_at: Time.zone.now + 32.days,
      active: true,
      user: User.first
    )

    system = System.new(
      title: 'Test Game',
      description: 'this is a test game',
      max_players: 40,
      cost: 30,
      start_date: Time.zone.now + 30.days,
      end_date: Time.zone.now + 32.days,
      registration_open: Time.zone.now,
      registration_close: Time.zone.now + 28.days,
      round_individuals: 5,
      )
    a.systems << system
    a.save
  end
end

Cohort.import(force: true)
User.import(force: true)
